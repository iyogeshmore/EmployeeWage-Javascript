console.log("Welcome to Employee payroll program");

// UC1 :Check Employee Presence 

const IS_ABSENT = 0
let empCheck = Math.floor(Math.random()*10)%2;
if (empCheck == IS_ABSENT)
{
console.log("Employee is Absent");
}
else
{
console.log("Emplooyee is Present");
}
*********************************************************************************************************************************
     // UC2 :Calculating Employee Wage

const IS_PART_TIME = 1;  
const IS_FULL_TIME = 2; 
const PART_TIME_HOURS = 4; 
const FULL_TIME_HOURS = 8; 
const WAGE_PER_HOUR = 20; 
let empHrs = 0; 
//empCheck = Math.floor(Math.random()*10)%3; 
switch (empCheck)
{
case IS_PART_TIME: 
empHrs = PART_TIME_HOURS;
break;
case IS_FULL_TIME: 
empHrs = FULL_TIME_HOURS; 
break;
default: empHrs = 0;
}
let empWage = empHrs * WAGE_PER_HOUR;
console.log("Emp Wage: " + empWage);

*********************************************************************************************************************************

     // UC3 :Refactored code to write function for daily working Hours

const IS_PART_TIME = 1;  
const IS_FULL_TIME = 2; 
const PART_TIME_HOURS = 4; 
const FULL_TIME_HOURS = 8; 
const WAGE_PER_HOUR = 20; 

function getWorkingHours (empCheck)
{
switch(empCheck)
{
case IS_PART_TIME:
return PART_TIME_HOURS;
case IS_FULL_TIME:
return FULL_TIME_HOURS;
default:
return 0;
}
}
let empHrs = 0;
let empCheck = Math.floor(Math.random()*10)%3;
empHrs = getWorkingHours(empCheck);
let empWage = empHrs * WAGE_PER_HOUR;
console.log("Employee Wage: " + empWage)

*********************************************************************************************************************************

     // UC4 :Calculating Wages for a Month assuming 20 Working Days in a Month

 const IS_PART_TIME = 1;  
const IS_FULL_TIME = 2; 
const PART_TIME_HOURS = 4; 
const FULL_TIME_HOURS = 8; 
const WAGE_PER_HOUR = 20; 
const NUM_OF_WORKING_DAYS = 20;
function getWorkingHours (empCheck)
{
switch(empCheck)
{
case IS_PART_TIME:
return PART_TIME_HOURS;
case IS_FULL_TIME:
return FULL_TIME_HOURS;
default:
return 0;
}
}
let empHrs = 0;
for (let day = 0; day < NUM_OF_WORKING_DAYS; day++)
{
let empCheck = Math.floor(Math.random()*10)%3;
empHrs += getWorkingHours(empCheck);
}
let empWage = empHrs * empHrs * WAGE_PER_HOUR;
console.log("Total Hrs: " + empHrs +" -->"+" Employee Wage: " +empWage)

*********************************************************************************************************************************

      //UC5 :Calculate Wages till a condition of total working hours of 160 or max days of 20 is reached for a month

const IS_PART_TIME = 1;  
const IS_FULL_TIME = 2; 
const PART_TIME_HOURS = 4; 
const FULL_TIME_HOURS = 8; 
const WAGE_PER_HOUR = 20; 
const NUM_OF_WORKING_DAYS = 20;
const MAX_HRS_IN_MONTH = 160;

function getWorkingHours (empCheck)
{
switch(empCheck)
{
case IS_PART_TIME:
return PART_TIME_HOURS;
case IS_FULL_TIME:
return FULL_TIME_HOURS;
default:
return 0;
}
}
let empHours = 0;
let totalWorkingHours = 0;
let totalWorkingDays = 0;
while (totalWorkingDays <= MAX_HRS_IN_MONTH && totalWorkingDays < NUM_OF_WORKING_DAYS) 
{
totalWorkingDays++;
let empCheck = Math.floor(Math.random()*10)%3;
totalWorkingHours += getWorkingHours(empCheck);
}
let empWage = totalWorkingHours * WAGE_PER_HOUR;
console.log("Total Days: "+totalWorkingDays +" Total Hours: "+totalWorkingHours+ " Employee wage: "+ empWage);

*********************************************************************************************************************************

      //UC6 :Store the Daily Wage along with the Total Wage - Save in an Array the Daily Wage

const IS_PART_TIME = 1;  
const IS_FULL_TIME = 2; 
const PART_TIME_HOURS = 4; 
const FULL_TIME_HOURS = 8; 
function getWorkingHours (empCheck)
{
 switch(empCheck)
{
case IS_PART_TIME:
return PART_TIME_HOURS;
case IS_FULL_TIME:
return FULL_TIME_HOURS;
default:
return 0;
}
}

const WAGE_PER_HOUR = 20; 
const NUM_OF_WORKING_DAYS = 20;
const MAX_HRS_IN_MONTH = 160;
let totalEmpHrs = 0;
let totalWorkingDays = 0;
let empDailyWageArr = new Array();
function calcDailyWage(empHrs){
return empHrs*WAGE_PER_HOUR;
}

while (totalEmpHrs <= MAX_HRS_IN_MONTH && totalWorkingDays < NUM_OF_WORKING_DAYS){
totalWorkingDays++;
let empCheck = Math.floor(Math.random() * 10) % 3;
let empHrs = getWorkingHours(empCheck);
totalEmpHrs+=empHrs;
empDailyWageArr.push(calcDailyWage(empHrs));
}
let empWage = calcDailyWage(totalEmpHrs);
console.log("Total Days: "+totalWorkingDays + ", Total Hours: "+totalEmpHrs+ ", Employee Wage: "+empWage)